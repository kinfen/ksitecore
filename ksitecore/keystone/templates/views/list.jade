extends ../layout/base

include ../mixins/rows
include ../mixins/pagination


block content
 .panel.panel-default
   .panel-heading #{sublisttype.path + ' list'}
   .panel-body
     .page-header
       h1 #{item.name}
       .text-right 
         label total #{sublist.total} items
     .tableBar
       if !sublisttype.get('nocreate')
         .create-item
           if sublisttype.get('autocreate')
             .toolbar
               a(href='?new' + csrf_query).btn.btn-default.btn-create.btn-create-item
                 span.ion-plus-round
                 |  Create #{sublisttype.singular}
           else
             form(method='post')
               input(type='hidden', name='action', value='create')
               input(type='hidden', name=csrf_token_key, value=csrf_token_value)
               input(type='hidden', name='parent', value='#{item.id}')
               input(type='hidden', name='list', value='#{sublisttype.path}')
               
               
               .toolbar
                 .row
                   .col-xs-6
                    #list-view
                   .col-xs-6
                       .btn-group.tableAction
                         a.btn.btn-default(role="button" href="/keystone/#{list.path}/#{item.id}")
                           span.glyphicon.glyphicon-edit
                           span  &nbsp;Edit 
                         a.btn.btn-default(role="button" href="/ksitecore/#{list.path}/list/#{item.id}?type=#{list.path}")
                           span.glyphicon.glyphicon-list-alt
                           span  &nbsp;Edit Sub Categories
                       .clear
       br
     table#table
     if sublist.results.length == 0
       .no-list
         h3 
           span.label.label-primary no content with this template!
     include ../component/pager

block js
  script(src='/keystone/js/views/list.js')
  script(src='/keystone/js/lib/browserified/querystring.js')
  script(src='/keystone/js/lib/browserified/queryfilter.js')
  script(src='/js/bootstrap-table.min.js')
  script.
    Keystone.list = !{JSON.stringify(list.getOptions())};
    Keystone.sublist = "#{sublisttype.path}";
    Keystone.sublist_id = "#{item.id}";
    Keystone.wysiwyg = { options: !{JSON.stringify(wysiwygOptions)} };
    //Support for the POST-based create process
    Keystone.showCreateForm = !{JSON.stringify(showCreateForm)};
    Keystone.createFormData = !{JSON.stringify(submitted)};
    Keystone.createFormErrors = !{JSON.stringify(createErrors || null)};
    Keystone.list.cols = !{JSON.stringify(colPaths)};
    Keystone.list.perPage = !{ Number(list.perPage) || 50 };
    Keystone.items = !{ JSON.stringify(sublist.results) };
    Keystone.search = "#{search}";
    Keystone.filters = !{ JSON.stringify(filters) };
    Keystone.sort = "#{sort.by}";
    Keystone.query = "#{query}";
    Keystone.csrf_query = "!{csrf_query}";
  script(src='/keystone/js/packages.js')
  script(src='/keystone/js/fields.js')
  script(src='/keystone/js/list.js')
  script(src='/keystone/js/lib/underscore/underscore-min.js')
  script(src='/keystone/js/lib/moment/moment-1.7.2.min.js')
  moment-1.7.2.min.js
  script.
   function operateFormatter(value, row, index) {
        return [
            '<a class="like" href="javascript:void(0)" title="Like">',
                '<i class="glyphicon glyphicon-heart"></i>',
            '</a>',
            '<a class="edit ml10" href="javascript:void(0)" title="Edit">',
                '<i class="glyphicon glyphicon-edit"></i>',
            '</a>',
            '<a class="remove ml10" href="javascript:void(0)" title="Remove">',
                '<i class="glyphicon glyphicon-remove"></i>',
            '</a>'
        ].join('');
    }

    window.operateEvents = {
        'click .like': function (e, value, row, index) {
            alert('You click like icon, row: ' + JSON.stringify(row));
            console.log(value, row, index);
        },
        'click .edit': function (e, value, row, index) {
            alert('You click edit icon, row: ' + JSON.stringify(row));
            console.log(value, row, index);
        },
        'click .remove': function (e, value, row, index) {
            alert('You click remove icon, row: ' + JSON.stringify(row));
            console.log(value, row, index);
        }
    };
   var data = !{JSON.stringify(sublist.results)};
   //去除data里面的object值
   data = _.map(data, function(obj){
    return _.mapObject(obj, function(value,key){
      if (typeof(value) == "object" && value.name)
      {
        return value.name;
      }
      else if (key == "publishedDate")
      {
        console.log(value);
        return moment(value).format('YYYY-MM-DD');
      }
      return value;
    })
   });
   $('#table').bootstrapTable({
    columns: !{JSON.stringify(columns)},
    data: data,
    clickToSelect:true,
    showColumns: true,
    showRefresh: true,
    minimumCountColumns: 2
   });

   


block	css
 link(rel="stylesheet", href='/css/bootstrap-table.min.css')